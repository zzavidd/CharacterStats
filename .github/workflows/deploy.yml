name: Deploy App

on:
  push:
    branches: ['main']

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - uses: oven-sh/setup-bun@v1
      - uses: actions/cache@v3
        with:
          path: ~/.bun/install/cache
          key: bun-cache-${{ hashFiles('bun.lockb') }}
          restore-keys: bun-cache-
      - run: bun install --frozen-lockfile
      - uses: actions/configure-pages@v4
        with:
          static_site_generator: next
      - uses: actions/cache@v3
        id: next-cache
        with:
          path: .next/cache
          key: next-cache-${{ hashFiles('bun.lockb') }}-${{ hashFiles('src/**/*.ts', 'src/**/*.tsx') }}
          restore-keys: next-cache-${{ hashFiles('bun.lockb') }}-
      - run: |
          touch .env.local
          echo NEXT_PUBLIC_API_KEY=${{ secrets.NEXT_PUBLIC_API_KEY }} >> .env.local
          echo NEXT_PUBLIC_APP_ID=${{ secrets.NEXT_PUBLIC_APP_ID }} >> .env.local
          echo NEXT_PUBLIC_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_AUTH_DOMAIN }} >> .env.local
          echo NEXT_PUBLIC_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_MESSAGING_SENDER_ID }} >> .env.local
          echo NEXT_PUBLIC_PROJECT_ID=${{ secrets.NEXT_PUBLIC_PROJECT_ID }} >> .env.local
          echo NEXT_PUBLIC_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_STORAGE_BUCKET }} >> .env.local
          echo NEXT_PUBLIC_APP_ENV=production >> .env.local
      - run: bun run build
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: CharacterStats App
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
